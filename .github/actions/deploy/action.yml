name: "deploy"

description: "Deploys the application to the required environment."

inputs:
  IMAGEREGISTRY:
    description: "Docker Repository"
    required: true
  DOCKER_USERNAME:
    description: "Docker Username"
    required: true
  DOCKER_PASSWORD:
    description: "Docker Password"
    required: true
  KUBE_CONFIG:
    description: "Kube Config"
    required: true
  DOMAIN:
    description: "Host Domain of the cluster"
    required: true
  IMAGEPULLSECRET:
    description: "Secret with docker credentials"
    required: true

runs:
  using: "composite"
  steps:

    # login to docker
    - name: Pre Requisites
      shell: bash
      run: |
        docker login ${{inputs.IMAGEREGISTRY}} --username ${{ inputs.DOCKER_USERNAME }} --password ${{ inputs.DOCKER_PASSWORD }}

    # set kubeconfig
    - name: Installing dependencies
      shell: bash
      run: |
        pwd
        mkdir -p ${HOME}/kyma-binaries
        export PATH=${HOME}/kyma-binaries/:$PATH
        mkdir -p ${HOME}/.kube
        echo "${{inputs.KUBE_CONFIG}}" | base64 --decode > ${HOME}/.kube/config
        

    - name: Deploying CAP App using helm chart to kyma environment.
      id: deploy-to-kyma
      shell: bash
      run: |
        npm i -g @sap/cds-dk
        npm i
        tag="tag$(date +%s)"
        
        participantID=037
        sidecar_image=${{inputs.IMAGEREGISTRY}}/recap/${participantID}/bookshop-sidecar:$tag
        srv_image=${{inputs.IMAGEREGISTRY}}/recap/${participantID}/bookshop-srv:$tag
        approuter_image=${{inputs.IMAGEREGISTRY}}/recap/${participantID}/bookshop-approuter:$tag
        
        pack build $approuter_image --path app --buildpack gcr.io/paketo-buildpacks/nodejs --builder paketobuildpacks/builder:base --env BP_NODE_RUN_SCRIPTS=""
        cds build --production
        pack build $sidecar_image --path gen/mtx/sidecar --buildpack gcr.io/paketo-buildpacks/nodejs --builder paketobuildpacks/builder:base --env BP_NODE_RUN_SCRIPTS=""
        pack build $srv_image --path gen/srv --buildpack gcr.io/paketo-buildpacks/nodejs --builder paketobuildpacks/builder:base --env BP_NODE_RUN_SCRIPTS=""
        
        docker push $approuter_image
        docker push $sidecar_image
        docker push $srv_image

        helm upgrade --set sidecar.image.repository=${{inputs.IMAGEREGISTRY}}/recap/${participantID}/bookshop-sidecar --set sidecar.image.tag=${tag} --set srv.image.repository=${{inputs.IMAGEREGISTRY}}/recap/${participantID}/bookshop-srv --set srv.image.tag=${tag} --set approuter.image.repository=${{inputs.IMAGEREGISTRY}}/recap/${participantID}/bookshop-approuter --set approuter.image.tag=${tag} bookshop-${participantID} ./chart --install --set-file xsuaa.jsonParameters=xs-security.json

        kubectl rollout status deployment bookshop-${participantID}-srv --timeout=8m
        kubectl rollout status deployment bookshop-${participantID}-approuter --timeout=8m
        kubectl rollout status deployment bookshop-${participantID}-sidecar --timeout=8m

        docker rmi $approuter_image
        docker rmi $sidecar_image
        docker rmi $srv_image